services:
  wordpress:
    container_name: local-wp
    build:
      context: ./dockerfiles/wordpress
    image: local/wordpress:latest
    restart: unless-stopped
    ports:
      - 8080:80
    depends_on:
      - mysql
    environment:
      WORDPRESS_DB_HOST: mysql
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
      WP_DEBUG: ${WP_DEBUG}
      WP_DEBUG_LOG: ${WP_DEBUG_LOG}
    volumes:
      - wordpress:/var/www/html/
      - bin:/usr/local/bin/
    networks:
      development:
        ipv4_address: "172.20.0.2"

  wpcli:
    container_name: local_wpcli
    build:
      context: ./dockerfiles/wpcli
    image: local/wordpress_cli:latest
    user: 33:33
    depends_on:
      - mysql
    command: /usr/local/bin/wpcli-init.sh
    environment:
      WORDPRESS_DB_HOST: mysql
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
    volumes:
      - wordpress:/var/www/html/
    networks:
      development:
        ipv4_address: "172.20.0.3"

  mysql:
    container_name: local_mysql
    image: mysql:latest
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${WORDPRESS_DB_NAME}
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    volumes:
      - mysql:/var/lib/mysql
    networks:
      development:
        ipv4_address: "172.20.0.4"

  phpmyadmin:
    container_name: local_phpmyadmin
    image: phpmyadmin:latest
    ports:
      - "8181:80"
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
    networks:
      development:
        ipv4_address: "172.20.0.5"

volumes:
  wordpress:
  bin:
  mysql:

networks:
  development:
    ipam:
      driver: default
      config:
        - subnet: "172.20.0.0/24"
